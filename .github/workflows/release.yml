name: Release Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ '*' ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  Verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js environment
        uses: actions/setup-node@v1.4.5
        with:
          node-version: 18
      - name: Setup and install dependencies
        run: |
          npm ci
      # - name: Unit tests and Coverage
      #   run: |
      #     npm run test
      # - name: Newman tests
      #   run: |
      #     npm run test:newman
      - name: Test Build
        run: |
          npm run build
  Publish:
      runs-on: ubuntu-latest
      if: ${{ github.ref == 'refs/heads/main' }}
      needs: [Verify]
      permissions:
        id-token: write
        contents: write
      steps: 
      - uses: actions/checkout@v2
      - name: Setup Node.js environment
        uses: actions/setup-node@v1.4.5
        with:
          node-version: 18
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-to-assume: arn:aws:iam::045615149555:role/phenixcoder-service-image-upload
          role-session-name: phenixcoder-service-image-upload-session
      - name: Publish ðŸš€ 
        run: |
          aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin $REPO_REGISTRY
          npm ci
          npm run release
        env: 
          REPO_NAME: "email-website-lambda-backend"
          REPO_URI: "public.ecr.aws/phenixcoder/email-website-lambda-backend"
          REPO_REGISTRY: "public.ecr.aws/phenixcoder"
